{"version":3,"sources":["components/PersonPage/PersonFilms/PersonFilms.module.css","components/PersonPage/PersonFilms/PersonFilms.jsx"],"names":["module","exports","PersonFilms","personFilms","useState","filmsName","setFilmsName","useEffect","a","makeConcurrentRequest","response","className","styles","wrapper","list__container","sort","z","Number","episode_id","map","title","list__item","item__episode","item__colon","item__title"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,gBAAkB,qCAAqC,WAAa,gCAAgC,cAAgB,mCAAmC,YAAc,iCAAiC,YAAc,mC,iHCiC9PC,UA7BK,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,YACpB,EAAgCC,mBAAS,IAAzC,mBAAMC,EAAN,KAAgBC,EAAhB,KAQA,OANAC,qBAAU,WACR,sBAAC,4BAAAC,EAAA,sEAC0BC,YAAsBN,GADhD,OACSO,EADT,OAEGJ,EAAaI,GAFhB,0CAAD,KAIA,IAEA,mCACI,qBAAKC,UAAWC,IAAOC,QAAvB,SACI,oBAAIF,UAAWC,IAAOE,gBAAtB,SAEQT,EAAUU,MAAK,SAACP,EAAEQ,GAAH,OAAOC,OAAOT,EAAEU,YAAYD,OAAOD,EAAEE,eACnDC,KAAI,YAAuB,IAArBC,EAAoB,EAApBA,MAAMF,EAAc,EAAdA,WACT,OAAO,qBAAIP,UAAWC,IAAOS,WAAtB,UACK,uBAAMV,UAAWC,IAAOU,cAAxB,qBAAgDJ,KAChD,sBAAMP,UAAWC,IAAOW,YAAxB,eACA,sBAAMZ,UAAWC,IAAOY,YAAxB,SAAsCJ,MAHJF","file":"static/js/3.59a6b82d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PersonFilms_wrapper__1zbdw\",\"list__container\":\"PersonFilms_list__container__2KxvQ\",\"list__item\":\"PersonFilms_list__item__3eshk\",\"item__episode\":\"PersonFilms_item__episode__2z2PC\",\"item__colon\":\"PersonFilms_item__colon__3NWwq\",\"item__title\":\"PersonFilms_item__title__2bLhn\"};","\r\nimport styles from  './PersonFilms.module.css';\r\nimport { makeConcurrentRequest } from '../../../utils/network';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst PersonFilms = ({personFilms})=>{\r\n  const[filmsName,setFilmsName] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    (async()=>{\r\n        const response = await makeConcurrentRequest(personFilms);\r\n        setFilmsName(response);\r\n    })()\r\n  },[])\r\n  return(\r\n    <>\r\n        <div className={styles.wrapper}>\r\n            <ul className={styles.list__container}>\r\n                {\r\n                    filmsName.sort((a,z)=>Number(a.episode_id)-Number(z.episode_id))\r\n                    .map(({title,episode_id})=>{\r\n                        return <li className={styles.list__item} key={episode_id}>\r\n                                    <span className={styles.item__episode}>Episode {episode_id}</span>\r\n                                    <span className={styles.item__colon}>:</span>\r\n                                    <span className={styles.item__title}>{title}</span>\r\n                               </li>\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PersonFilms;"],"sourceRoot":""}